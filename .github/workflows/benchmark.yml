name: Performance Benchmarks (Bun)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 0' # Cada domingo a las 3 AM UTC

jobs:
  benchmarks:
    name: Run Performance Benchmarks
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Cache Bun dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: bun-${{ runner.os }}-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          bun-${{ runner.os }}-

    - name: Install dependencies
      run: bun install

    - name: Build project (TypeScript)
      shell: bash
      run: |
        if [ -f tsconfig.json ]; then
          bun run tsc
        fi


    - name: Run benchmark suite (loggers)
      run: bun run benchmarks/benchmarks.ts loggers
      env:
        NODE_ENV: production

    - name: Run benchmark suite (features)
      run: bun run benchmarks/benchmarks.ts features

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results-${{ matrix.os }}
        path: |
          benchmarks/results/benchmark-results.json
          benchmarks/results/spectral-features-results.json
        retention-days: 30

  benchmark-report:
    name: Generate Benchmark Report
    runs-on: ubuntu-latest
    needs: benchmarks
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all benchmark artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest


    - name: Install dependencies
      run: bun install

    - name: Generate benchmark report
      run: |
        bun run scripts/generate-benchmark-report.ts || \
        bun run scripts/generate-benchmark-report.js

    - name: Verify report generation
      run: |
        if [ ! -f benchmark-report.md ]; then
          echo "::error::Benchmark report not generated!"
          exit 1
        fi

    - name: Post report as PR comment (if applicable)
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'benchmark-report.md';
          if (!fs.existsSync(path)) {
            core.setFailed("No benchmark report generated");
          } else if (context.payload.pull_request) {
            const report = fs.readFileSync(path, 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: report
            });
          }

    - name: Upload benchmark report
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-report
        path: benchmark-report.md

  performance-check:
    name: Performance Regression Check
    runs-on: ubuntu-latest
    needs: benchmarks
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download benchmark artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: benchmark-results-*
        path: artifacts

    - name: Install dependencies
      run: bun install

    - name: Check for performance regressions
      run: bun run scripts/check-performance-regressions.ts
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

import{_ as a,c as i,o as e,ae as t}from"./chunks/framework.DTHJ7n2V.js";const k=JSON.parse('{"title":"SpectralLogs Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"overview.md","filePath":"overview.md"}'),l={name:"overview.md"};function n(o,s,r,p,h,c){return e(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="spectrallogs-documentation" tabindex="-1">SpectralLogs Documentation <a class="header-anchor" href="#spectrallogs-documentation" aria-label="Permalink to &quot;SpectralLogs Documentation&quot;">​</a></h1><p>SpectralLogs is a high-performance logging library for Node.js and the Web. It provides rich colors, clean formatting, error handling, and an extensible plugin system with zero dependencies.</p><ul><li>Package name: <code>spectrallogs</code></li><li>Node entry: <code>spectrallogs</code></li><li>Web entry: <code>spectrallogs/web</code></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> spectrallogs</span></span></code></pre></div><h2 id="quick-start-node" tabindex="-1">Quick Start (Node) <a class="header-anchor" href="#quick-start-node" aria-label="Permalink to &quot;Quick Start (Node)&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;spectrallogs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from Node!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="quick-start-web" tabindex="-1">Quick Start (Web) <a class="header-anchor" href="#quick-start-web" aria-label="Permalink to &quot;Quick Start (Web)&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;spectrallogs/web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from Web!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="why-spectral" tabindex="-1">Why Spectral? <a class="header-anchor" href="#why-spectral" aria-label="Permalink to &quot;Why Spectral?&quot;">​</a></h2><ul><li>Fast: buffered output (Node) and batching (Web)</li><li>Beautiful: ANSI (Node) or CSS (Web) colors</li><li>Flexible: plugins for cross-cutting concerns</li><li>Simple: drop-in replacement for <code>console.log</code></li></ul>`,11)])])}const g=a(l,[["render",n]]);export{k as __pageData,g as default};

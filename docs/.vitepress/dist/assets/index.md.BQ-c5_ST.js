import{_ as i,c as e,o as a,ae as t}from"./chunks/framework.DTHJ7n2V.js";const g=JSON.parse(`{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Spectral Logs","text":"High-performance logging for Node, Web, Bun & Deno","tagline":"Beautiful colors, clean formatting, blazing-fast output, and an extensible plugin system.","image":{"src":"/logo.png","alt":"SpectralLogs logo"},"actions":[{"theme":"brand","text":"Get Started","link":"/getting-started"},{"theme":"alt","text":"GitHub","link":"https://github.com/ZtaMDev/SpectralLogs"},{"theme":"alt","text":"npm","link":"https://www.npmjs.com/package/spectrallogs"}]},"features":[{"icon":{"src":"/icons/fast.svg"},"title":"Lightning Fast","details":"Buffered stdout in Node and batched console output in Web dramatically reduce logging overhead."},{"icon":{"src":"/icons/colors.svg"},"title":"Rich Colors","details":"ANSI for terminals and CSS styles for browsers, with HEX, RGB, and named colors."},{"icon":{"src":"/icons/errors.svg"},"title":"Smart Errors","details":"Clean stack traces, deduplication, and helpful formatting for Error objects."},{"icon":{"src":"/icons/plugin.svg"},"title":"Plugin System","details":"Extend behavior with before/after hooks; ship Node and Web specific plugins."},{"icon":{"src":"/icons/ts.svg"},"title":"TypeScript First","details":"Fully typed API with IntelliSense and zero runtime dependencies."},{"icon":{"src":"/icons/universal.svg"},"title":"Universal","details":"Node, Bun, Deno, and Web. Use 'spectrallogs' on server runtimes and 'spectrallogs/web' in browsers or via CDN (esm.sh)."}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}`),n={name:"index.md"};function l(r,s,o,p,h,d){return a(),e("div",null,[...s[0]||(s[0]=[t(`<h2 id="why-spectrallogs" tabindex="-1">Why SpectralLogs? <a class="header-anchor" href="#why-spectrallogs" aria-label="Permalink to &quot;Why SpectralLogs?&quot;">â€‹</a></h2><p>SpectralLogs replaces <code>console.log</code> with a fast, beautiful, and flexible logger. It supports:</p><ul><li>Clean, colorized output</li><li>Timestamps and levels</li><li>Powerful error formatting</li><li>Plugins for custom behavior</li><li>Node and Web builds in a single package</li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Node / Bun / Deno</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;spectrallogs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Node ready&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Web</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> web </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;spectrallogs/web&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">web.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Web ready&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,4)])])}const k=i(n,[["render",l]]);export{g as __pageData,k as default};
